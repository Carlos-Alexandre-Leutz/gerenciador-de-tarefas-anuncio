{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./src/requisicoes/requisicoes.js","webpack:///./src/requisicoes/servicos/usuarios/index.js","webpack:///./node_modules/regenerator-runtime/runtime.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","protoProps","staticProps","prototype","RequisicoesPadrao","url","router","useRouter","console","log","firebase","database","ref","push","res","message","update","id","delete","dbRef","child","get","tabela","getPorId","getId","add","data","inserir","edit","editar","editId","editarId","remove","remover","functions","runtime","exports","Op","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","type","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","AsyncIterator","PromiseImpl","invoke","record","result","__await","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"js/chunk-42cdd1c6.e6b38556.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import firebase from \"firebase\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nexport default class RequisicoesPadrao {\r\n    constructor() {\r\n\r\n    }\r\n    async inserir(props, url) {\r\n        let router = useRouter();\r\n        console.log(\"url da requiziçao\", url)\r\n        try {\r\n            let res = await firebase\r\n                .database()\r\n                .ref(url)\r\n                // .set(props);\r\n                .push(props);\r\n            return res;\r\n        } catch (error) {\r\n            console.error(error);\r\n            if (error.message == \"Permission denied\") {\r\n                router.push(\"/login\");\r\n            } else {\r\n                return \"error\"\r\n            }\r\n        }\r\n    }\r\n    async editar(props, url) {\r\n        let router = useRouter();\r\n        console.log(\"url da requiziçao\", url)\r\n        try {\r\n            let res = await firebase\r\n                .database()\r\n                .ref(url)\r\n                .update(props)\r\n                // .set(props);\r\n                // .push(props);\r\n\r\n            return res;\r\n        } catch (error) {\r\n            console.error(error);\r\n            if (error.message == \"Permission denied\") {\r\n                router.push(\"/login\");\r\n            } else {\r\n                return \"error\"\r\n            }\r\n        }\r\n    }\r\n\r\n    // async editar(objeto, url) {\r\n    //     try {\r\n    //         let res = await axios.put(urlBase + url, objeto);\r\n    //         console.log(\"url da requiziçao\", urlBase + url)\r\n    //         return res;\r\n    //     } catch (error) {\r\n    //         console.error(\"erro ao editar\", error);\r\n    //     }\r\n    // }\r\n    // async editarId(url, id, objeto) {\r\n    //     try {\r\n    //         let res = await axios.put(urlBase + url + id + \".json\", objeto);\r\n    //         console.log(\"url da requiziçao\", urlBase + url + id + \".json\")\r\n    //         return res;\r\n    //     } catch (error) {\r\n    //         console.error(\"erro ao editar\", error);\r\n    //     }\r\n    // }\r\n\r\n    async remover(id, url) {\r\n        let router = useRouter();\r\n        console.log(\"url da requiziçao\", url)\r\n        try {\r\n            let res = await firebase\r\n                .database()\r\n                .ref(url)\r\n                .delete();\r\n\r\n            return res;\r\n        } catch (error) {\r\n            console.error(error);\r\n            if (error.message == \"Permission denied\") {\r\n                router.push(\"/login\");\r\n            } else {\r\n                return \"error\"\r\n            }\r\n        }\r\n    }\r\n    async get(url) {\r\n        let router = useRouter();\r\n        console.log(\"url da requiziçao\", url)\r\n        try {\r\n            const dbRef = firebase.database().ref();\r\n            let res = await dbRef.child(url).get()\r\n            return res;\r\n        } catch (error) {\r\n            console.error(error);\r\n            if (error.message == \"Permission denied\") {\r\n                router.push(\"/login\");\r\n            } else {\r\n                return \"error\"\r\n            }\r\n        }\r\n    }\r\n}","import RequisicoesPadrao from \"../../requisicoes\";\r\n\r\nconst get = async(tabela) => {\r\n    let instance = new RequisicoesPadrao();\r\n    return instance.get(tabela);\r\n};\r\nconst getPorId = async(tabela, id) => {\r\n    let instance = new RequisicoesPadrao();\r\n    return instance.getId(tabela, id);\r\n};\r\nconst add = async(tabela, data) => {\r\n    let instance = new RequisicoesPadrao();\r\n    return instance.inserir(data, tabela);\r\n};\r\nconst edit = async(tabela, data) => {\r\n    let instance = new RequisicoesPadrao();\r\n    return instance.editar(data, tabela);\r\n};\r\nconst editId = async(tabela, id, data) => {\r\n    let instance = new RequisicoesPadrao();\r\n    return instance.editarId(tabela, id, data);\r\n};\r\nconst remove = async(id, tabela) => {\r\n    let instance = new RequisicoesPadrao();\r\n    return instance.remover(id, tabela);\r\n};\r\n\r\nconst functions = { add, edit, remove, get, getPorId, editId };\r\n\r\nexport default functions;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}